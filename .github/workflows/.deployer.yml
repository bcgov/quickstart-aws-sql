name: .Terraform Deployer

on:
  workflow_call:
    inputs:
      ### Required
      environment_name:
        description: 'The name of the environment to deploy to'
        required: true
        default: 'dev'
        type: string
      command:
        description: 'The terragrunt command to run'
        required: true
        default: 'apply'
        type: string

      tag:
        description: 'The tag of the containers to deploy'
        default: 'latest'
        type: string
        required: false
      app_env:
        required: false
        type: string
        description: 'The APP env separates between AWS ENV and Actual APP, since AWS dev is where PR, and TEST is deployed'
      stack_prefix:
        required: true
        type: string
        description: 'The stack prefix to use for the resources'
    outputs:
      API_GW_URL: 
        value: ${{ jobs.infra.outputs.API_GW_URL }}
      S3_BUCKET_ARN:
        value: ${{ jobs.infra.outputs.S3_BUCKET_ARN }}
      S3_BUCKET_NAME:
        value: ${{ jobs.infra.outputs.S3_BUCKET_NAME }}
      CF_DOMAIN:
        value: ${{ jobs.infra.outputs.CF_DOMAIN }}
      CF_DISTRIBUTION_ID:
        value: ${{ jobs.infra.outputs.CF_DISTRIBUTION_ID }}

env:
  TG_VERSION: 0.63.6
  TF_VERSION: 1.12.2
  TG_SRC_PATH: terragrunt
  AWS_REGION: ca-central-1
permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # This is required for actions/checkout
jobs:
 infra:
  environment: ${{ inputs.environment_name }}
  name: Terragrunt ${{inputs.command}} ${{inputs.app_env}}
  runs-on: ubuntu-24.04
  outputs:
    API_GW_URL: ${{ steps.tg.outputs.API_GW_URL }}
    S3_BUCKET_ARN: ${{ steps.tg.outputs.S3_BUCKET_ARN }}
    S3_BUCKET_NAME: ${{ steps.tg.outputs.S3_BUCKET_NAME }}
    CF_DOMAIN: ${{ steps.tg.outputs.CF_DOMAIN }}
    CF_DISTRIBUTION_ID: ${{ steps.tg.outputs.CF_DISTRIBUTION_ID }}
  steps:
    - name: Checkout
      uses: actions/checkout@v5
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5
      with:
        role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
        role-session-name: ${{ inputs.environment_name }}-deployment
        aws-region: ${{ env.AWS_REGION }}
    - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    - name: Get ECR Registry
      id: ecr-check
      run: |
        ECR_REGISTRY=$(aws sts get-caller-identity --query Account --output text).dkr.ecr.ca-central-1.amazonaws.com
        echo "ecr-registry=$ECR_REGISTRY" >> $GITHUB_OUTPUT
    - name: Image Tags
      id: image-tags
      shell: bash
      run: |
        API_IMAGE="${{ steps.ecr-check.outputs.ecr-registry }}/${{ github.repository }}:backend-${{ inputs.tag }}"
        FLYWAY_IMAGE="${{ steps.ecr-check.outputs.ecr-registry }}/${{ github.repository }}:migrations-${{ inputs.tag }}"
        echo "api-image=$API_IMAGE" >> $GITHUB_OUTPUT
        echo "flyway-image=$FLYWAY_IMAGE" >> $GITHUB_OUTPUT
    
    - name: Setup Terragrunt
      uses: autero1/action-terragrunt@aefb0a43c4f5503a91fefb307745c4d51c26ed0e # v3
      with:
        terragrunt-version: ${{ env.TG_VERSION }}
    - name: Terragrunt ${{inputs.command}}
      id: tg
      working-directory: terragrunt/${{ inputs.environment_name }}
      env:
        target_env: ${{ inputs.environment_name }}
        aws_license_plate: ${{ secrets.AWS_LICENSE_PLATE }}
        api_image: ${{ steps.image-tags.outputs.api-image }}
        flyway_image: ${{ steps.image-tags.outputs.flyway-image }}
        app_env: ${{inputs.app_env}}
        stack_prefix: ${{ inputs.stack_prefix }}
        repo_name: ${{ github.event.repository.name }}
        terragrunt_command: ${{ inputs.command }}
      run: |
        # Run terraform
        terragrunt run-all ${{inputs.command}} --terragrunt-non-interactive
        terragrunt output -json > outputs.json
        #print the output
        cat outputs.json

        echo "S3_BUCKET_ARN=$(jq -r .frontend_bucket.value.arn outputs.json)" >> $GITHUB_OUTPUT
        echo "S3_BUCKET_NAME=$(jq -r .frontend_bucket.value.name outputs.json)" >> $GITHUB_OUTPUT
        echo "CF_DOMAIN=$(jq -r .cloudfront.value.domain_name outputs.json)" >> $GITHUB_OUTPUT
        echo "CF_DISTRIBUTION_ID=$(jq -r .cloudfront.value.distribution_id outputs.json)" >> $GITHUB_OUTPUT
        echo "API_GW_URL=$(jq -r .apigw_url.value outputs.json)" >> $GITHUB_OUTPUT
        